<Window x:Class="DeedDrafter.MainWindow"
        xmlns:local="clr-namespace:DeedDrafter"
xmlns:helpers="clr-namespace:DeedDrafter"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
       
        xmlns:esri="http://schemas.esri.com/arcgis/client/2009"
        Icon="images/CadastralFabric32.png" 
        WindowState="Maximized"
        Title="Deed Drafter" Width="1000" Height="650">
  <Window.Resources>
    <!--ScrollBar-->
    <Style x:Key="RightScrollViewer" TargetType="{x:Type ScrollViewer}">
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ScrollViewer}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <ScrollContentPresenter Grid.Column="0"/>
              <ScrollBar Name="PART_VerticalScrollBar" Margin="3,0,3,0" Grid.Column="1"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <ControlTemplate x:Key="loadingAnimation">
      <ControlTemplate.Triggers>
        <Trigger Property="Visibility" Value="Visible">
          <Trigger.EnterActions>
            <BeginStoryboard Name="animation">
              <Storyboard>
                <DoubleAnimation From="0" To="359" Duration="0:0:3" RepeatBehavior="Forever" 
                                                 Storyboard.DesiredFrameRate="20"
                                                 Storyboard.TargetName="angle" 
                                                 Storyboard.TargetProperty="Angle"/>
              </Storyboard>
            </BeginStoryboard>
          </Trigger.EnterActions>
          <Trigger.ExitActions>
            <StopStoryboard BeginStoryboardName="animation"/>
          </Trigger.ExitActions>
        </Trigger>
      </ControlTemplate.Triggers>
      
      <Image Name="content" Opacity="1">
        <Image.Source>
          <DrawingImage>
            <DrawingImage.Drawing>
              <DrawingGroup>
                <GeometryDrawing Brush="Transparent">
                  <GeometryDrawing.Geometry>
                    <RectangleGeometry Rect="0,0,1,1"/>
                  </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <DrawingGroup>
                  <DrawingGroup.Transform>
                    <RotateTransform x:Name="angle" Angle="0" CenterX="0.5" CenterY="0.5"/>
                  </DrawingGroup.Transform>
                  <GeometryDrawing>
                    <GeometryDrawing.Pen>
                      <Pen Brush="Green" Thickness="0.1"/>
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                      <PathGeometry>
                        <PathFigure StartPoint="0.9,0.5">
                          <ArcSegment Point="0.5,0.1" RotationAngle="90" SweepDirection="Clockwise" IsLargeArc="True" Size="0.4,0.4"/>
                        </PathFigure>
                      </PathGeometry>
                    </GeometryDrawing.Geometry>
                  </GeometryDrawing>
                  <GeometryDrawing Brush="Green">
                    <GeometryDrawing.Geometry>
                      <PathGeometry>
                        <PathFigure StartPoint="0.5,0">
                          <LineSegment Point="0.7,0.1" />
                          <LineSegment Point="0.5,0.2" />
                        </PathFigure>
                      </PathGeometry>
                    </GeometryDrawing.Geometry>
                  </GeometryDrawing>
                </DrawingGroup>
              </DrawingGroup>
            </DrawingImage.Drawing>
          </DrawingImage>
        </Image.Source>
      </Image>
    </ControlTemplate>

  </Window.Resources>

  <Grid x:Name="LayoutRoot">
    <Grid.Resources>
           
        <local:FindResults x:Key="resFindResults"/>
      <local:ParcelData x:Key="resParcelData"/>
      <ObjectDataProvider x:Key="resRecordInfo"
          ObjectInstance="{StaticResource resParcelData}"
          MethodName="GetRecordInfo"/>
            <helpers:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
      <local:BooleanToVisibilityConverter x:Key="ReverseBooleanToVisibilityConverter" IsReversed="True"/>
      <local:DoubleToVisibilityConverter x:Key="DoubleToVisibilityConverter" />
      <local:DoubleToVisibilityConverter x:Key="ReverseDoubleToVisibilityConverter" IsReversed="True"/>
      <local:MultiBooleanToVisibilityConverter x:Key="MultiBooleanToVisibilityConverter" />
      <local:MultiBooleanToVisibilityConverter x:Key="ReverseMultiBooleanToVisibilityConverter" IsReversed="True"/>
      <esri:SimpleMarkerSymbol x:Key="TestMarkerSymbol" Color="Green" Size="20" Style="Circle" />
      <esri:SimpleMarkerSymbol x:Key="DefaultMarkerSymbol" Color="Black" Size="8" Style="Circle" />
      <esri:SimpleMarkerSymbol x:Key="RedMarkerSymbol" Color="Red" Size="8" Style="Square" />
      <esri:SimpleMarkerSymbol x:Key="HollowMarkerSymbol1"  Color="White" Size="4" Style="Square" />
      <esri:SimpleMarkerSymbol x:Key="HollowMarkerSymbol2"  Color="Black" Size="8" Style="Square" />
      <esri:SimpleMarkerSymbol x:Key="BlueMarkerSymbolDiamond" Color="Blue" Size="8" Style="Diamond" />
      <esri:SimpleMarkerSymbol x:Key="BlueMarkerSymbolSquare" Color="Blue" Size="8" Style="Square" />
      <esri:SimpleMarkerSymbol x:Key="SnapMarkerSymbol" Color="AliceBlue" Size="5" Style="Circle" />
      <esri:SimpleLineSymbol x:Key="BoundaryLineSymbol" Color="Black" Style="Solid" Width="4"/>
      <esri:SimpleLineSymbol x:Key="OriginConnectionLineSymbol" Color="Blue" Style="DashDotDot" Width="3" />
      <esri:SimpleFillSymbol x:Key="BufferSymbol" Fill="#66BB0000" BorderBrush="#88CC0000" BorderThickness="2"  />
      <esri:MarkerSymbol x:Key="GraphicTextSymbol">
        <esri:MarkerSymbol.ControlTemplate>
          <ControlTemplate>
            <Grid IsHitTestVisible="False">
              <!--Text halo using a white blurred text-->
              <TextBlock Foreground="White" Text="{Binding Attributes[Content]}" FontSize="10">
                <TextBlock.RenderTransform>
                  <RotateTransform Angle="{Binding Attributes[Heading]}"/>
                </TextBlock.RenderTransform>
                <TextBlock.Effect>
                  <BlurEffect Radius="5"/>
                </TextBlock.Effect>
              </TextBlock>
              <!--Text-->
              <TextBlock Foreground="Black" Text="{Binding Attributes[Content]}" FontSize="10">
                <TextBlock.RenderTransform>
                  <RotateTransform Angle="{Binding Attributes[Heading]}"/>
                </TextBlock.RenderTransform>
              </TextBlock>
            </Grid>
          </ControlTemplate>
        </esri:MarkerSymbol.ControlTemplate>
      </esri:MarkerSymbol >
      <esri:TextSymbol x:Key="TextSymbol" FontSize="14"/>
      <SolidColorBrush x:Key="GridCellErrorColor" Color="Red"/>
      <SolidColorBrush x:Key="GridCellOkColor" Color="Black"/>

      <DataTemplate x:Key="InfoWindowTemplate">
        <Grid MouseEnter="ParcelLineInfoWindow_MouseEnter" 
              FocusManager.FocusedElement="{Binding ElementName=SelectedLineBearing}"
              MouseLeave="ParcelLineInfoWindow_MouseLeave">
          <Rectangle Fill="AliceBlue" Stroke="Gray" RadiusX="3" RadiusY="3" Margin="0,0,0,0" Opacity="0.75"/>
          <StackPanel Orientation="Horizontal">
            <StackPanel Margin="2">
              <TextBlock Text="Bearing"/>
              <TextBox x:Name="SelectedLineBearing" Height="20" Text="{Binding SelectedLine.Bearing}" KeyUp="MapEdit_KeyUp" LostFocus="MapEdit_LostFocus">
                <TextBox.Style>
                  <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding SelectedLine.BearingError}" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource GridCellOkColor}"/>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding SelectedLine.BearingError}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource GridCellErrorColor}"/>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBox.Style>
              </TextBox>
            </StackPanel>
            <StackPanel Margin="2">
              <TextBlock Text="Distance"/>
              <TextBox Height="20" Text="{Binding SelectedLine.Distance}" KeyUp="MapEdit_KeyUp" LostFocus="MapEdit_LostFocus">
                <TextBox.Style>
                  <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding SelectedLine.DistanceError}" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource GridCellOkColor}"/>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding SelectedLine.DistanceError}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource GridCellErrorColor}"/>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBox.Style>
              </TextBox>
            </StackPanel>
            <StackPanel Margin="2">
              <TextBlock Text="Radius"/>
              <TextBox Height="20" Text="{Binding SelectedLine.Radius}" KeyUp="MapEdit_KeyUp" LostFocus="MapEdit_LostFocus">
                <TextBox.Style>
                  <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding SelectedLine.RadiusError}" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource GridCellOkColor}"/>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding SelectedLine.RadiusError}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource GridCellErrorColor}"/>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBox.Style>
              </TextBox>
            </StackPanel>
            <StackPanel Margin="2">
              <TextBlock Text="Chord"/>
              <TextBox Height="20" Text="{Binding SelectedLine.Parameter2}" KeyUp="MapEdit_KeyUpChord" LostFocus="MapEdit_LostFocus">
                <TextBox.Style>
                  <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding SelectedLine.Parameter2Error}" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource GridCellOkColor}"/>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding SelectedLine.Parameter2Error}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource GridCellErrorColor}"/>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBox.Style>
              </TextBox>
            </StackPanel>
          </StackPanel>
        </Grid>
      </DataTemplate>

    </Grid.Resources>

    <esri:Map x:Name="ParcelMap" WrapAround="True" 
                Progress="ParcelMap_Progress" 
               
                DataContext="{StaticResource resParcelData}"
                MouseRightButtonDown="ParcelMap_MouseRightButtonDown"
                MouseRightButtonUp="ParcelMap_MouseRightButtonUp"
                KeyUp="ParcelMap_KeyUp"
                MouseMove="ParcelMap_MouseMove"
                ExtentChanged="ParcelMap_ExtentChanged"
                MouseClick="MapPoint_MouseClick">
      <esri:GraphicsLayer ID="SketchLineGraphicLayer" 
                MouseEnter="LineGraphicsLayer_MouseEnter"/>
      <esri:GraphicsLayer ID="SketchPointGraphicLayer"/>
    </esri:Map>
    
    <esri:InfoWindow x:Name="ParcelLineInfoWindow"
                Padding="0"
                CornerRadius="0"   
                Map="{Binding ElementName=ParcelMap}" 
                BorderBrush="AliceBlue"
                Background="#77919191"
                ContentTemplate="{StaticResource InfoWindowTemplate}"
                MouseLeftButtonUp="ParcelLineInfoWindow_MouseLeftButtonUp" />

    <Viewbox Name="DFProgressor" Width="30" Height="30" Margin="20" Visibility="Hidden"
                HorizontalAlignment="Left" VerticalAlignment="Bottom">
      <local:CircularProgressBar />
    </Viewbox>

    <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top">
      <Grid x:Name="MainControl" Background="#77919191" HorizontalAlignment="Left" Margin="10,5,5,5">
        <Rectangle Fill="AliceBlue" Stroke="Gray" RadiusX="3" RadiusY="3" Margin="0,0,0,0" Opacity="0.75"/>
        <StackPanel Orientation="Horizontal">
          <Image Source="images/CadastralFabric32.png" Stretch="None" Margin="5"/>
          <StackPanel>
            <StackPanel Orientation="Horizontal">
              <TextBlock Text="Deed Drafter" Foreground="Black" FontWeight="Bold" FontSize="16" 
                                    VerticalAlignment="Center" Margin="15,12,15,0"/>
              <Image Source="images/HelpSystemBlue16.png" Stretch="None" Margin="5,7,5,0" VerticalAlignment="Top" MouseDown="Information_MouseDown">
                <Image.Style>
                  <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                      <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Opacity" Value="0.75"></Setter>
                      </Trigger>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="1"></Setter>
                      </Trigger>
                    </Style.Triggers>
                  </Style>
                </Image.Style>
              </Image>
            </StackPanel>
            <TextBlock Text="{Binding Version, Mode=OneTime}" HorizontalAlignment="Right" 
                       DataContext="{StaticResource resParcelData}"
                       Margin="0,0,5,5" FontSize="9" Foreground="LightGray" FontWeight="SemiBold"/>
          </StackPanel>
        </StackPanel>
      </Grid>
      <Border x:Name="sideBar" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,0,5,5" 
                    BorderBrush="#FF46566D" BorderThickness="1" CornerRadius="1.5" 
                    Background="AliceBlue">
        <ScrollViewer x:Name="ListScroller" VerticalScrollBarVisibility="Auto" 
                              HorizontalScrollBarVisibility="Auto" BorderBrush="Transparent" 
                              BorderThickness="0" Style="{StaticResource RightScrollViewer}">
          <StackPanel Orientation="Vertical">
            <Grid Margin="3">
              <ListBox>
                <ListBox.Resources>
                  <Style TargetType="{x:Type Expander}">
                    <Setter Property="IsExpanded" 
                            Value="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                  </Style>
                </ListBox.Resources>
                <ListBox.Template>
                  <ControlTemplate TargetType="{x:Type ListBox}">
                    <ItemsPresenter/>
                  </ControlTemplate>
                </ListBox.Template>
                <ListBox.ItemContainerStyle>
                  <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                          <ContentPresenter Content="{TemplateBinding Content}"/>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </ListBox.ItemContainerStyle>

                <Expander x:Name="PDE_Find" Cursor="Hand" Expanded="PDE_Find_Expanded" 
                          Header="Parcel Navigator" Background="#FFD6EBE6">
                  <StackPanel Background="White" Margin="5,0,5,3" DataContext="{StaticResource resFindResults}">
                    <StackPanel Orientation="Horizontal">
                      <TextBlock Text="Search:" VerticalAlignment="Center" Margin="5,5,0,5" />
                      <TextBox Name="SearchItem" Margin="5,5" MinWidth="100" PreviewKeyUp="SearchItem_PreviewKeyUp"/>
                      <Control Name="Loading" Template="{StaticResource loadingAnimation}" Margin="5,0"
                               Width="18" Visibility="Collapsed"/>
                    </StackPanel>
                    <TextBlock Margin="5,0,5,5" TextWrapping="WrapWithOverflow" x:Name="QueryLabel"/>
                    <DataGrid CanUserAddRows="False" 
                              CanUserDeleteRows="True" 
                              SelectionUnit="FullRow" 
                              x:Name="FindResultControl"
                              ItemsSource="{Binding}" 
                              AutoGenerateColumns="False"
                              Background="#77919191"
                              Visibility="Collapsed"
                              IsReadOnly="True"
                              GridLinesVisibility="None"
                              HeadersVisibility="None"
                              SelectionChanged="FindResultControl_SelectionChanged"
                              MaxHeight="130">
                      <DataGrid.Columns>
                        <!--<DataGridTextColumn Header="Type" Binding="{Binding Layer}"/>-->
                        <DataGridTemplateColumn Header="Item">
                          <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                              <StackPanel>
                                <TextBlock Text="{Binding Item}" Visibility="{Binding HasTooltip, Converter={StaticResource ReverseBooleanToVisibilityConverter}}"/>
                                <TextBlock Text="{Binding Item}" Visibility="{Binding HasTooltip, Converter={StaticResource BooleanToVisibilityConverter}}">
                                  <TextBlock.ToolTip>
                                    <TextBlock Text="{Binding ItemTooltip}"/>
                                  </TextBlock.ToolTip>
                                </TextBlock>
                              </StackPanel>
                            </DataTemplate>
                          </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                      </DataGrid.Columns>
                    </DataGrid>
                  </StackPanel>
                </Expander>
                <Expander x:Name="DPE_ParcelEntry" Cursor="Hand"  
                          Expanded="DPE_ParcelEntry_Expanded"
                          Header="Parcel Entry" Background="#FFD6EBE6">
                  <Grid x:Name="ParcelGridContainer" HorizontalAlignment="Left" 
                        DataContext="{StaticResource resParcelData}"
                        VerticalAlignment="Bottom" Margin="5,0">
                    <Rectangle Fill="White" Stroke="Gray" RadiusX="0" RadiusY="0"/>
                    <StackPanel Margin="5">
                      <DockPanel Margin="0,0,0,5">
                        <StackPanel Orientation="Horizontal">
                          <TextBlock Text="Recorder ID:" VerticalAlignment="Center"/>
                          <TextBox Text="{Binding PlanName}" MinWidth="60" Margin="5,0"/>
                          <TextBlock Text="Document Type:" VerticalAlignment="Center"/>
                          <ComboBox x:Name="DocumentTypes" MinWidth="50" Margin="5,0,0,0" 
                              ItemsSource="{Binding DocumentEntries}" 
                              DisplayMemberPath="Name"
                              SelectedValuePath="Name"
                              SelectedIndex="0">
                          </ComboBox>
                        </StackPanel>
                      </DockPanel>
                      <DataGrid ItemsSource="{Binding Source={StaticResource resRecordInfo}}"
                                x:Name="ParcelLines" 
                                Background="#77919191" 
                                HorizontalAlignment="Stretch" 
                                Foreground="Black" 
                                CanUserAddRows="True" 
                                CanUserDeleteRows="True" 
                                SelectionUnit="CellOrRowHeader"
                                CanUserReorderColumns="False" 
                                CanUserSortColumns="False"
                                CanUserResizeRows="False"
                                MouseMove="DataGrid_MouseMove"
                                DragEnter="DataGrid_CheckDropTarget"
                                DragLeave="DataGrid_CheckDropTarget"
                                DragOver="DataGrid_CheckDropTarget"
                                Drop="DataGrid_Drop"
                                AlternatingRowBackground="LightGray"
                                PreviewKeyDown="ParcelLines_PreviewKeyDown"
                                PreviewKeyUp="ParcelLines_PreviewKeyUp"
                                KeyUp="ParcelLines_KeyUp"
                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                KeyboardNavigation.ControlTabNavigation="Cycle"
                                KeyboardNavigation.TabNavigation="Cycle"
                                AddingNewItem="ParcelLines_AddingNewItem"
                                AutoGenerateColumns="False">
                        <DataGrid.Resources>
                          <ObjectDataProvider x:Key="LineCategoryEnum" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                            <ObjectDataProvider.MethodParameters>
                              <x:Type Type="local:DisplayLineCategory"></x:Type>
                            </ObjectDataProvider.MethodParameters>
                          </ObjectDataProvider>
                        </DataGrid.Resources>
                        <DataGrid.RowHeaderStyle>
                          <Style TargetType="{x:Type DataGridRowHeader}">
                            <Setter Property="Content" Value="= "/>
                          </Style>
                        </DataGrid.RowHeaderStyle>
                        <DataGrid.ItemContainerStyle>
                          <!-- DRAG AND DROP: Enables rows as drop targets -->
                          <Style TargetType="{x:Type DataGridRow}">
                            <Setter Property="AllowDrop" Value="True" />
                          </Style>
                        </DataGrid.ItemContainerStyle>
                        <DataGrid.Columns>
                          <DataGridTextColumn Header="From" Binding="{Binding From}" Visibility="Collapsed"/>
                          <DataGridComboBoxColumn Header="Category" SelectedItemBinding="{Binding DisplayCategory}" 
                                              ItemsSource="{Binding Source={StaticResource LineCategoryEnum}}"/>
                          <DataGridTextColumn Header="Bearing" Binding="{Binding Bearing}" MinWidth="70">
                            <DataGridTextColumn.ElementStyle>
                              <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                  <DataTrigger Binding="{Binding BearingError}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource GridCellOkColor}"/>
                                  </DataTrigger>
                                  <DataTrigger Binding="{Binding BearingError}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource GridCellErrorColor}"/>
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </DataGridTextColumn.ElementStyle>
                          </DataGridTextColumn>
                          <DataGridTextColumn Header="Distance" Binding="{Binding Distance}">
                            <DataGridTextColumn.ElementStyle>
                              <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                  <DataTrigger Binding="{Binding DistanceError}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource GridCellOkColor}"/>
                                  </DataTrigger>
                                  <DataTrigger Binding="{Binding DistanceError}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource GridCellErrorColor}"/>
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </DataGridTextColumn.ElementStyle>
                          </DataGridTextColumn>
                          <DataGridTextColumn Header="Radius" Binding="{Binding Radius}">
                            <DataGridTextColumn.ElementStyle>
                              <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                  <DataTrigger Binding="{Binding RadiusError}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource GridCellOkColor}"/>
                                  </DataTrigger>
                                  <DataTrigger Binding="{Binding RadiusError}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource GridCellErrorColor}"/>
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </DataGridTextColumn.ElementStyle>
                          </DataGridTextColumn>
                          <DataGridTextColumn Header="Chord" Binding="{Binding Parameter2}">
                            <DataGridTextColumn.ElementStyle>
                              <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                  <DataTrigger Binding="{Binding Parameter2Error}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource GridCellOkColor}"/>
                                  </DataTrigger>
                                  <DataTrigger Binding="{Binding Parameter2Error}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource GridCellErrorColor}"/>
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </DataGridTextColumn.ElementStyle>
                          </DataGridTextColumn>
                          <DataGridTextColumn Header="To" Binding="{Binding To}" Visibility="Collapsed"/>
                        </DataGrid.Columns>
                      </DataGrid>
                      <DockPanel Margin="0,5,0,0" >
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center"
                                    Visibility="{Binding MiscloseError, Converter={StaticResource ReverseBooleanToVisibilityConverter}}">
                          <TextBlock Text="Misclose" Foreground="Black" FontSize="10"/>
                          <TextBlock Text=" Bearing " Foreground="Black" FontSize="10"/>
                          <TextBlock Text="{Binding FormatedMiscloseBearing}" FontWeight="Bold" Foreground="Black" FontSize="10"/>
                          <TextBlock Text=" Distance " Foreground="Black" FontSize="10"/>
                          <TextBlock Text="{Binding MiscloseDistance, StringFormat=F2}" FontWeight="Bold" Foreground="Black" FontSize="10"/>
                          <TextBlock Text="{Binding DistanceUnit}" Foreground="Black" FontSize="10" Margin="2,0"/>
                          <TextBlock Text=" " Foreground="Black" FontSize="10"/>
                          <TextBlock Text="{Binding MiscloseRatioLabel}" Foreground="Black" FontSize="10"/>
                          <TextBlock Text=" " Foreground="Black" FontSize="10"/>
                          <TextBlock Text="{Binding FormatedMiscloseRatio}" FontWeight="Bold" Foreground="Black" FontSize="10"/>
                        </StackPanel>
                        <TextBlock Text="Misclose not calculated" VerticalAlignment="Center" Foreground="Black" FontSize="10" Visibility="{Binding MiscloseError, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                          <Button Content="Zoom" FontSize="9" Click="Zoom_Click" Margin="5,0" />
                          <Button Content="Clear" FontSize="9" Click="Discard_Click"/>
                        </StackPanel>
                      </DockPanel>
                      <StackPanel Margin="0,3,3,0" Orientation="Horizontal" Visibility="{Binding MiscloseError, Converter={StaticResource ReverseBooleanToVisibilityConverter}}">
                        <TextBlock Text="Stated Area:" VerticalAlignment="Center" FontSize="10"/>
                        <TextBox Text="{Binding StatedArea}" MinWidth="60" Margin="5,0" FontSize="10"/>
                        <TextBlock Text="Calculated Area " Foreground="Black" FontSize="10" VerticalAlignment="Center"/>
                        <StackPanel Orientation="Horizontal" Visibility="{Binding MiscloseArea, Converter={StaticResource DoubleToVisibilityConverter}}" VerticalAlignment="Center">
                          <TextBlock Text="{Binding MiscloseArea, StringFormat=F2}" FontWeight="Bold" Foreground="Black" FontSize="10"/>
                          <TextBlock Text="{Binding AreaUnit}" Foreground="Black" FontSize="10" Margin="2,0"/>
                        </StackPanel>
                        <TextBlock Text="Invalid" FontWeight="Bold" Foreground="Black" FontSize="10"  VerticalAlignment="Center"
                                    Visibility="{Binding MiscloseArea, Converter={StaticResource ReverseDoubleToVisibilityConverter}}"/>
                      </StackPanel>
                    </StackPanel>
                  </Grid>
                </Expander>
                <Expander x:Name="PDE_Tools" Cursor="Hand"  
                                             Header="Parcel Tools" Background="#FFD6EBE6">
                  <Grid Margin="5,0" DataContext="{StaticResource resParcelData}">
                    <Rectangle Fill="White" Stroke="Gray" RadiusX="0" RadiusY="0"/>
                    <StackPanel Margin="5">
                      <DockPanel>
                        <ToolBarTray Background="White" Orientation="Vertical" IsLocked="True">
                          <ToolBar SizeChanged="ToolBar_SizeChanged">
                            <RadioButton x:Name="RotationButton" IsChecked="True" Click="RotationScale_Click" Style="{StaticResource {x:Type ToggleButton}}" Margin="5">
                              <Image Source="images/CadastralRotateJoiningParcel32.png" Stretch="None" Margin="5"/>
                            </RadioButton>
                            <RadioButton x:Name="ScaleButton" Click="RotationScale_Click" Style="{StaticResource {x:Type ToggleButton}}" Margin="5">
                              <Image Source="images/CadastralScaleJoiningParcel32.png" Stretch="None" Margin="5"/>
                            </RadioButton>
                          </ToolBar>
                        </ToolBarTray>
                        <Grid>
                          <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                          </Grid.RowDefinitions>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                          </Grid.ColumnDefinitions>
                          <TextBlock Grid.Row="1" Grid.Column="0" Text="Angle:" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,0"/>
                          <TextBox   Grid.Row="1" Grid.Column="1" x:Name="RotationText" Text="{Binding Rotation}" VerticalAlignment="Center" Margin="5,0" MinWidth="60" 
                                                                  KeyUp="Rotation_KeyUp" LostFocus="Rotation_LostFocus"/>
                          <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding RotationUnit, FallbackValue=DMS}" VerticalAlignment="Center" Margin="5,0" FontSize="9"/>
                          <TextBlock Grid.Row="4" Grid.Column="0" Text="Scale:" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,0"/>
                          <TextBox   Grid.Row="4" Grid.Column="1" x:Name="ScaleText" Text="{Binding Scale}" VerticalAlignment="Center" Margin="5,0" MinWidth="60" 
                                                                  KeyUp="Scale_KeyUp" LostFocus="Scale_LostFocus"/>
                        </Grid>
                      </DockPanel>
                      <TextBlock Text="Use right mouse button for tools" Margin="2"/>
                    </StackPanel>
                  </Grid>
                </Expander>
                <Expander x:Name="PDE_Share" Cursor="Hand"  
                                             Header="Share" Background="#FFD6EBE6">
                  <Grid Margin="5,0">
                    <Rectangle Fill="White" Stroke="Gray" RadiusX="0" RadiusY="0"/>
                    <StackPanel Margin="5">
                      <DockPanel>
                        <Button Click="Save_Click" Margin="5">
                          <Image Source="images/GenericSave32.png" Stretch="None" Margin="5"/>
                        </Button>
                        <Button Click="Send_AsEmail" Margin="5">
                          <Image Source="images/EmailArrow32.png" Stretch="None" Margin="5"/>
                        </Button>
                      </DockPanel>
                    </StackPanel>
                  </Grid>
                </Expander>
              </ListBox>
            </Grid>
          </StackPanel>
        </ScrollViewer>
      </Border>
    </StackPanel>
  </Grid>
</Window>
